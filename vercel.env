# Vercel Environment Variables Template
# Copy these variables to Vercel Dashboard → Settings → Environment Variables
# 
# IMPORTANT: Replace all placeholder values with your actual production credentials
# Never commit actual secrets to version control

# Clerk Authentication (Production)
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_live_YOUR_PRODUCTION_CLERK_PUBLISHABLE_KEY
CLERK_SECRET_KEY=sk_live_YOUR_PRODUCTION_CLERK_SECRET_KEY

# Supabase Database (Production)
NEXT_PUBLIC_SUPABASE_URL=https://YOUR_PRODUCTION_PROJECT.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=YOUR_PRODUCTION_SUPABASE_ANON_KEY
SUPABASE_SERVICE_ROLE_KEY=YOUR_PRODUCTION_SUPABASE_SERVICE_ROLE_KEY

# AI Services (Production)
OPENAI_API_KEY=sk-YOUR_PRODUCTION_OPENAI_API_KEY

# Database (Production - for Prisma)
DATABASE_URL=postgresql://postgres:YOUR_PASSWORD@db.YOUR_PROJECT.supabase.co:5432/postgres
DIRECT_URL=postgresql://postgres:YOUR_PASSWORD@db.YOUR_PROJECT.supabase.co:5432/postgres

# Environment
NODE_ENV=production

# Optional: Staging Variables (for migration scripts)
# STAGING_SUPABASE_URL=https://YOUR_STAGING_PROJECT.supabase.co
# STAGING_SUPABASE_ANON_KEY=YOUR_STAGING_SUPABASE_ANON_KEY

# Instructions:
# 1. Go to Vercel Dashboard → Your Project → Settings → Environment Variables
# 2. Add each variable above (without the # comments)
# 3. Set Environment to "Production" for production variables
# 4. For sensitive keys, use Vercel's "Sensitive" option to hide values
# 5. Ensure all Clerk keys use "live_" prefix for production
# 6. Ensure Supabase URLs point to your production project
# 7. Test deployment after setting all variables
